// automatically generated by Xtext
grammar ch.hilbri.assist.dse.dsl.DSEDsl with org.eclipse.xtext.common.Terminals

import "ch.hilbri.assist.dse.model" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "ch.hilbri.assist.mapping.model" as model

AssistModelDSE: 
	'Global' 	'{' 
					'System' '=' systemName=STRING ';' 
	'}'

	'Hardware' 	'{'	
					(compartments+=Compartment)*
	'}'

	'Software' '{'
//					(applications+=Application)* 
//					(applicationAlternatives+=ApplicationAlternatives)*
	'}'

	('Restrictions' '{'
//					(dislocalityRelations+=DislocalityRelation)*
//					(colocalityRelations+=ColocalityRelation)*
	'}')?
;

Compartment returns model::Compartment: 
	'Compartment' name=ID '{'
		('Manufacturer' 	'=' manufacturer=STRING 	';')?
		('PowerSupply' 	'=' powerSupply=STRING 	';')?
//		(boxes+=Box)+
//		('Properties' '{'	(metricParameters+=MetricParameter)* '}')?
	'}'
;

//Box:
//	'Box' name=ID '{'
//		('Manufacturer' 			'=' manufacturer=STRING ';')?
//		(boards+=Board)*
//		(boardAlternatives+=BoardAlternatives)*
//		('Properties' '{'	(metricParameters+=MetricParameter)* '}')?
//	'}'
//;
//	
//Board:
//	'Board' name=ID '{'
//		('Manufacturer' 			'=' manufacturer=STRING ';')?
//		('Type' 					'=' boardType=STRING ';')?
//		('PowerSupply' 			'=' powerSupply=STRING ';')?
//	    ('DesignAssuranceLevel' 	'=' assuranceLevel=DesignAssuranceLevelType';')?
//		('RAM'  					'=' ramCapacity=INT ';')?
//		('ROM'  					'=' romCapacity=INT ';')?
//		(processors+=Processor)+
//		(ioAdapters+=IOAdapter)*
//		('Properties' '{'	(metricParameters+=MetricParameter)* '}')?
//	'}'
//;
//
//Processor:
//	'Processor' name=ID '{'
//	    ('Manufacturer' 			'=' manufacturer=STRING ';')?
//	    ('Type'         			'=' processorType=STRING ';')?
//		(cores+=Core)+
//		('Properties' '{'		(metricParameters+=MetricParameter)* '}')?
//	'}';
//
//Core:
//	'Core' name=ID '{' 
//		('Capacity' 					'=' capacity=INT ';')?
//		('Architecture' 				'=' architecture=STRING ';')?
//		('Properties' '{'	(metricParameters+=MetricParameter)* '}')?
//	'}';
//
//IOAdapter:
//	'Adapter' name=ID '{' 	
//	 	'Type' '=' adapterType=IOAdapterType ';'
//	 	'Count' '=' totalCount=INT ';'
//	'}' 
//;
//
///* Variability modeling */
//
//BoardAlternatives: 
//	'Alternatives' '{' 
//		(alternatives+=BoardAlternative)+
//	'}'
//;
//
//BoardAlternative: 
//	'Alternative' name=ID '{'
//		(boards+=Board)*
//	'}'
//;
//
//ApplicationAlternatives: 
//	'Alternatives' '{'
//		(alternatives+=ApplicationAlternative)+
//	'}'
//;
//
//
//ApplicationAlternative: 
//	'Alternative' name=ID  '{'
//		(applications+=Application)*
//	'}'
//;
//
//
///* SOFTWARE */
//
////ApplicationGroup: 
////	'Group' name=ID '{' applicationsOrGroups+=[ApplicationOrApplicationGroup] (',' applicationsOrGroups+=[ApplicationOrApplicationGroup])+ '}'
////;
//
//Application:
//	'Application' name=ID '{'
//	    ('CriticalityLevel' 		'=' criticalityLevel=DesignAssuranceLevelType ';')?
//		('Developer'		 		'=' developedBy=STRING ';')?
//		('RestrictDeploymentTo' '{' restrictMappingToHardwareElements+=[HardwareElement|QualifiedName] (',' restrictMappingToHardwareElements+=[HardwareElement|QualifiedName])* '}' ';')?
//		(tasks+=Task)+
//		('Properties' 			'{'	(metricParameters+=MetricParameter)* '}')?
//	'}';
//
//Task:
//	'Task' name=ID '{'
//		('CoreUtilization' 			'=' coreUtilization=INT ';')? 
// 		('RequiredRAM' 				'=' ramUtilization=INT ';')? 
//		('RequiredROM'				'=' romUtilization=INT ';')? 
//		(ioAdapterRequirements+=IOAdapterRequirement)*
//		('RestrictDeploymentTo'	'{' restrictMappingToHardwareElements+=[HardwareElement|QualifiedName] (',' restrictMappingToHardwareElements+=[HardwareElement|QualifiedName])* '}' ';')? 
//		('Properties' 			'{'	(metricParameters+=MetricParameter)* '}')?
//	'}';
//
//IOAdapterRequirement: 
//	'Requires' 	requiredAdapterCount=INT 
//				adapterType=IOAdapterType 'adapter' 
//  			 	(isExclusiveOnly?='exclusive' | isSharedAllowed?='shared') 
//	';' 
//;
//
///* RELATIONEN */
//
//DislocalityRelation:
//	applications+=[Application] (',' applications+=[Application])* 'dislocal' 'up' 'to' hardwareLevel=HardwareArchitectureLevelType ';';
//	
//ColocalityRelation:
//	applications+=[Application|QualifiedName] (',' (applications+=[Application]))* 'on' 'same' 	hardwareLevel=HardwareArchitectureLevelType ';'; 

//DissimilarityRelation: 
//	applicationsOrGroups+=[ApplicationOrApplicationGroup] (',' applicationsOrGroups+=[ApplicationOrApplicationGroup])+
//	'dissimilar' 'based' 'on'
//	dissimilarityClause=DissimilarityClause ';'
//;
//
//DissimilarityClause:  
//	DissimilarityEntry | ( '(' (=>DissimilarityDisjunction | DissimilarityConjunction) ')' ) // Der Pfeil ist wichtig!
//;
//
//DissimilarityDisjunction: 
//	dissimilarityClauses+=DissimilarityClause ( 'OR' dissimilarityClauses+=DissimilarityClause)+ ;
//
//DissimilarityConjunction: 
//	dissimilarityClauses+=DissimilarityClause ( 'AND' dissimilarityClauses+=DissimilarityClause)+ ;
//
//DissimilarityEntry: 
//	( 'Compartment.' compartmentAttribute= CompartmentAttributes ) 	|
//	( 'Box.' boxAttribute = BoxAttributes) 							|
//	( 'Board.' boardAttribute = BoardAttributes)					|
//	( 'Processor.' processorAttribute = ProcessorAttributes)
//;
//
//enum CompartmentAttributes :
//	MANUFACTURER 	= 'Manufacturer' 	| 
//	POWERSUPPLY	 	= 'PowerSupply';
//	
//enum BoxAttributes :
//	MANUFACTURER 	= 'Manufacturer';
//	
//enum BoardAttributes:
//	MANUFACTURER 	= 'Manufacturer' 			|
//	POWERSUPPLY 	= 'PowerSupply'				|
//	ASSURANCELEVEL 	= 'DesignAssuranceLevel' 	|
//	BOARDTYPE 		= 'Type';
//
//
//enum ProcessorAttributes:
//	MANUFACTURER 	= 'Manufacturer' 	| 
//	PROCESSORTYPE	= 'ProcessorType' 
//;

//MetricParameter:  
//	name=STRING '=' value=INT ';'
//;
//
//QualifiedName:
//	ID ('.' ID)*
//;
//
///* ENUMS */
//enum HardwareArchitectureLevelType:
//	CORE 		= 'Core'		|
//	PROCESSOR 	= 'Processor'	|
//	BOARD		= 'Board'		|
//	BOX			= 'Box'			|
//	COMPARTMENT	= 'Compartment'
//;
//
//enum DesignAssuranceLevelType: 
//	NONE= 'None' 	|
//	QS	= 'QS'	 	|
//	D	= 'D'		|
//	C	= 'C'		|
//	B	= 'B'		|
//	A 	= 'A'  
//;
//
//enum IOAdapterType:
//	CAN 		= 'Can'					|
//	ELB			= 'Enhanced Local Bus'	|
//	ETH			= 'Ethernet'			|
//	ANALOG 		= 'Analog'				|
//	DIGITAL		= 'Digital'				|
//	SERIAL		= 'Serial'				;
//

//AssistModelDSE returns AssistModelDSE:
//	'AssistModelDSE'
//	'{'
//		('systemName' systemName=EString)?
//		'compartments' '{' compartments+=Compartment ( "," compartments+=Compartment)* '}' 
//		'applications' '{' applications+=Application ( "," applications+=Application)* '}' 
//		('dislocalityRelations' '{' dislocalityRelations+=DislocalityRelation ( "," dislocalityRelations+=DislocalityRelation)* '}' )?
//		('colocalityRelations' '{' colocalityRelations+=ColocalityRelation ( "," colocalityRelations+=ColocalityRelation)* '}' )?
//		('applicationAlternatives' '{' applicationAlternatives+=ApplicationAlternatives ( "," applicationAlternatives+=ApplicationAlternatives)* '}' )?
//	'}';
//
//
//
//
//
//
//
//
//
//HardwareElement returns model::HardwareElement:
//	HardwareElement_Impl | Compartment | Box | Board | Processor | Core;
//
//
//
//
//
//
//
//EString returns ecore::EString:
//	STRING | ID;
//
//Compartment returns model::Compartment:
//	'Compartment'
//	name=EString
//	'{'
//		('manufacturer' manufacturer=EString)?
//		('powerSupply' powerSupply=EString)?
//		('metricParameters' '{' metricParameters+=MetricParameter ( "," metricParameters+=MetricParameter)* '}' )?
//		'boxes' '{' boxes+=Box ( "," boxes+=Box)* '}' 
//	'}';
//
//Application returns model::Application:
//	'Application'
//	name=EString
//	'{'
//		('developedBy' developedBy=EString)?
//		('criticalityLevel' criticalityLevel=DesignAssuranceLevelType)?
//		('restrictMappingToHardwareElements' '(' restrictMappingToHardwareElements+=[model::HardwareElement|EString] ( "," restrictMappingToHardwareElements+=[model::HardwareElement|EString])* ')' )?
//		'tasks' '{' tasks+=Task ( "," tasks+=Task)* '}' 
//		('metricParameters' '{' metricParameters+=MetricParameter ( "," metricParameters+=MetricParameter)* '}' )?
//	'}';
//
//DislocalityRelation returns model::DislocalityRelation:
//	'DislocalityRelation'
//	'{'
//		('hardwareLevel' hardwareLevel=HardwareArchitectureLevelType)?
//		'applications' '(' applications+=[model::Application|EString] ( "," applications+=[model::Application|EString])* ')' 
//	'}';
//
//ColocalityRelation returns model::ColocalityRelation:
//	{model::ColocalityRelation}
//	'ColocalityRelation'
//	'{'
//		('hardwareLevel' hardwareLevel=HardwareArchitectureLevelType)?
//		('applications' '(' applications+=[model::Application|EString] ( "," applications+=[model::Application|EString])* ')' )?
//	'}';
//
//ApplicationAlternatives returns ApplicationAlternatives:
//	{ApplicationAlternatives}
//	'ApplicationAlternatives'
//	'{'
//		('alternatives' '{' alternatives+=ApplicationAlternative ( "," alternatives+=ApplicationAlternative)* '}' )?
//	'}';
//
//MetricParameter returns model::MetricParameter:
//	{model::MetricParameter}
//	'MetricParameter'
//	name=EString
//	'{'
//		('value' value=EInt)?
//	'}';
//
//Box returns model::Box:
//	{model::Box}
//	'Box'
//	name=EString
//	'{'
//		('manufacturer' manufacturer=EString)?
//		('metricParameters' '{' metricParameters+=MetricParameter ( "," metricParameters+=MetricParameter)* '}' )?
//		('boards' '{' boards+=Board ( "," boards+=Board)* '}' )?
//	'}';
//
//EInt returns ecore::EInt:
//	'-'? INT;
//
//Board returns model::Board:
//	'Board'
//	name=EString
//	'{'
//		('manufacturer' manufacturer=EString)?
//		('boardType' boardType=EString)?
//		('powerSupply' powerSupply=EString)?
//		('assuranceLevel' assuranceLevel=DesignAssuranceLevelType)?
//		('ramCapacity' ramCapacity=EInt)?
//		('romCapacity' romCapacity=EInt)?
//		('metricParameters' '{' metricParameters+=MetricParameter ( "," metricParameters+=MetricParameter)* '}' )?
//		'processors' '{' processors+=Processor ( "," processors+=Processor)* '}' 
//		('ioAdapters' '{' ioAdapters+=IOAdapter ( "," ioAdapters+=IOAdapter)* '}' )?
//	'}';
//
//enum DesignAssuranceLevelType returns model::DesignAssuranceLevelType:
//				NONE = 'NONE' | QS = 'QS' | D = 'D' | C = 'C' | B = 'B' | A = 'A';
//
//Processor returns model::Processor:
//	'Processor'
//	name=EString
//	'{'
//		('manufacturer' manufacturer=EString)?
//		('processorType' processorType=EString)?
//		('metricParameters' '{' metricParameters+=MetricParameter ( "," metricParameters+=MetricParameter)* '}' )?
//		'cores' '{' cores+=Core ( "," cores+=Core)* '}' 
//	'}';
//
//IOAdapter returns model::IOAdapter:
//	{model::IOAdapter}
//	'IOAdapter'
//	name=EString
//	'{'
//		('totalCount' totalCount=EInt)?
//		('adapterType' adapterType=IOAdapterType)?
//	'}';
//
//Core returns model::Core:
//	{model::Core}
//	'Core'
//	name=EString
//	'{'
//		('manufacturer' manufacturer=EString)?
//		('architecture' architecture=EString)?
//		('capacity' capacity=EInt)?
//		('metricParameters' '{' metricParameters+=MetricParameter ( "," metricParameters+=MetricParameter)* '}' )?
//	'}';
//
//enum IOAdapterType returns model::IOAdapterType:
//				NONE = 'NONE' | CAN = 'CAN' | ELB = 'ELB' | ETH = 'ETH' | ANALOG = 'ANALOG' | DIGITAL = 'DIGITAL' | SERIAL = 'SERIAL';
//
//Task returns model::Task:
//	{model::Task}
//	'Task'
//	name=EString
//	'{'
//		('coreUtilization' coreUtilization=EInt)?
//		('ramUtilization' ramUtilization=EInt)?
//		('romUtilization' romUtilization=EInt)?
//		('restrictMappingToHardwareElements' '(' restrictMappingToHardwareElements+=[model::HardwareElement|EString] ( "," restrictMappingToHardwareElements+=[model::HardwareElement|EString])* ')' )?
//		('ioAdapterRequirements' '{' ioAdapterRequirements+=IOAdapterRequirement ( "," ioAdapterRequirements+=IOAdapterRequirement)* '}' )?
//		('metricParameters' '{' metricParameters+=MetricParameter ( "," metricParameters+=MetricParameter)* '}' )?
//	'}';
//
//HardwareElement_Impl returns model::HardwareElement:
//	{model::HardwareElement}
//	'HardwareElement'
//	name=EString
//	'{'
//		('manufacturer' manufacturer=EString)?
//		('metricParameters' '{' metricParameters+=MetricParameter ( "," metricParameters+=MetricParameter)* '}' )?
//	'}';
//
//IOAdapterRequirement returns model::IOAdapterRequirement:
//	{model::IOAdapterRequirement}
//	(isSharedAllowed?='isSharedAllowed')?
//	(isExclusiveOnly?='isExclusiveOnly')?
//	'IOAdapterRequirement'
//	'{'
//		('adapterType' adapterType=IOAdapterType)?
//		('requiredAdapterCount' requiredAdapterCount=EInt)?
//	'}';
//
//EBoolean returns ecore::EBoolean:
//	'true' | 'false';
//
//enum HardwareArchitectureLevelType returns model::HardwareArchitectureLevelType:
//				CORE = 'CORE' | PROCESSOR = 'PROCESSOR' | BOARD = 'BOARD' | BOX = 'BOX' | COMPARTMENT = 'COMPARTMENT';
//
//ApplicationAlternative returns ApplicationAlternative:
//	{ApplicationAlternative}
//	'ApplicationAlternative'
//	name=EString
//	'{'
//		('applications' '{' applications+=Application ( "," applications+=Application)* '}' )?
//	'}';
