/*
* generated by Xtext
*/
package ch.hilbri.assist.mappingdsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import ch.hilbri.assist.mappingdsl.services.MappingDSLGrammarAccess;

public class MappingDSLParser extends AbstractContentAssistParser {
	
	@Inject
	private MappingDSLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected ch.hilbri.assist.mappingdsl.ui.contentassist.antlr.internal.InternalMappingDSLParser createParser() {
		ch.hilbri.assist.mappingdsl.ui.contentassist.antlr.internal.InternalMappingDSLParser result = new ch.hilbri.assist.mappingdsl.ui.contentassist.antlr.internal.InternalMappingDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEqInterfaceTypeAccess().getAlternatives(), "rule__EqInterfaceType__Alternatives");
					put(grammarAccess.getAssistModelAccess().getGroup(), "rule__AssistModel__Group__0");
					put(grammarAccess.getAssistModelAccess().getGroup_8(), "rule__AssistModel__Group_8__0");
					put(grammarAccess.getAssistModelAccess().getGroup_9(), "rule__AssistModel__Group_9__0");
					put(grammarAccess.getCompartmentAccess().getGroup(), "rule__Compartment__Group__0");
					put(grammarAccess.getCompartmentAccess().getGroup_3(), "rule__Compartment__Group_3__0");
					put(grammarAccess.getCompartmentAccess().getGroup_4(), "rule__Compartment__Group_4__0");
					put(grammarAccess.getCompartmentAccess().getGroup_5(), "rule__Compartment__Group_5__0");
					put(grammarAccess.getCompartmentAccess().getGroup_6(), "rule__Compartment__Group_6__0");
					put(grammarAccess.getCompartmentAccess().getGroup_8(), "rule__Compartment__Group_8__0");
					put(grammarAccess.getRDCAccess().getGroup(), "rule__RDC__Group__0");
					put(grammarAccess.getRDCAccess().getGroup_3(), "rule__RDC__Group_3__0");
					put(grammarAccess.getRDCAccess().getGroup_4(), "rule__RDC__Group_4__0");
					put(grammarAccess.getRDCAccess().getGroup_5(), "rule__RDC__Group_5__0");
					put(grammarAccess.getRDCAccess().getGroup_6(), "rule__RDC__Group_6__0");
					put(grammarAccess.getRDCAccess().getGroup_8(), "rule__RDC__Group_8__0");
					put(grammarAccess.getConnectorAccess().getGroup(), "rule__Connector__Group__0");
					put(grammarAccess.getAvailableEqInterfaceAccess().getGroup(), "rule__AvailableEqInterface__Group__0");
					put(grammarAccess.getEqInterfaceGroupAccess().getGroup(), "rule__EqInterfaceGroup__Group__0");
					put(grammarAccess.getEqInterfaceGroupAccess().getGroup_4(), "rule__EqInterfaceGroup__Group_4__0");
					put(grammarAccess.getEqInterfaceAccess().getGroup(), "rule__EqInterface__Group__0");
					put(grammarAccess.getEqInterfaceAccess().getGroup_3(), "rule__EqInterface__Group_3__0");
					put(grammarAccess.getEqInterfaceAccess().getGroup_4(), "rule__EqInterface__Group_4__0");
					put(grammarAccess.getEqInterfaceAccess().getGroup_5(), "rule__EqInterface__Group_5__0");
					put(grammarAccess.getEqInterfaceAccess().getGroup_6(), "rule__EqInterface__Group_6__0");
					put(grammarAccess.getEqInterfaceAccess().getGroup_7(), "rule__EqInterface__Group_7__0");
					put(grammarAccess.getEqInterfaceAccess().getGroup_8(), "rule__EqInterface__Group_8__0");
					put(grammarAccess.getEqInterfaceAccess().getGroup_9(), "rule__EqInterface__Group_9__0");
					put(grammarAccess.getEqInterfaceAccess().getGroup_10(), "rule__EqInterface__Group_10__0");
					put(grammarAccess.getEqInterfaceAccess().getGroup_11(), "rule__EqInterface__Group_11__0");
					put(grammarAccess.getEqInterfaceAccess().getGroup_12(), "rule__EqInterface__Group_12__0");
					put(grammarAccess.getEqInterfaceAccess().getGroup_13(), "rule__EqInterface__Group_13__0");
					put(grammarAccess.getMetricParameterAccess().getGroup(), "rule__MetricParameter__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getAssistModelAccess().getSystemNameAssignment_4(), "rule__AssistModel__SystemNameAssignment_4");
					put(grammarAccess.getAssistModelAccess().getCompartmentsAssignment_7(), "rule__AssistModel__CompartmentsAssignment_7");
					put(grammarAccess.getAssistModelAccess().getEqInterfacesAssignment_8_2(), "rule__AssistModel__EqInterfacesAssignment_8_2");
					put(grammarAccess.getAssistModelAccess().getEqInterfaceGroupsAssignment_9_2(), "rule__AssistModel__EqInterfaceGroupsAssignment_9_2");
					put(grammarAccess.getCompartmentAccess().getNameAssignment_1(), "rule__Compartment__NameAssignment_1");
					put(grammarAccess.getCompartmentAccess().getManufacturerAssignment_3_2(), "rule__Compartment__ManufacturerAssignment_3_2");
					put(grammarAccess.getCompartmentAccess().getPowerSupplyAssignment_4_2(), "rule__Compartment__PowerSupplyAssignment_4_2");
					put(grammarAccess.getCompartmentAccess().getSideAssignment_5_2(), "rule__Compartment__SideAssignment_5_2");
					put(grammarAccess.getCompartmentAccess().getZoneAssignment_6_2(), "rule__Compartment__ZoneAssignment_6_2");
					put(grammarAccess.getCompartmentAccess().getRdcsAssignment_7(), "rule__Compartment__RdcsAssignment_7");
					put(grammarAccess.getCompartmentAccess().getMetricParametersAssignment_8_2(), "rule__Compartment__MetricParametersAssignment_8_2");
					put(grammarAccess.getRDCAccess().getNameAssignment_1(), "rule__RDC__NameAssignment_1");
					put(grammarAccess.getRDCAccess().getManufacturerAssignment_3_2(), "rule__RDC__ManufacturerAssignment_3_2");
					put(grammarAccess.getRDCAccess().getPowerSupplyAssignment_4_2(), "rule__RDC__PowerSupplyAssignment_4_2");
					put(grammarAccess.getRDCAccess().getRdcTypeAssignment_5_2(), "rule__RDC__RdcTypeAssignment_5_2");
					put(grammarAccess.getRDCAccess().getEssAssignment_6_2(), "rule__RDC__EssAssignment_6_2");
					put(grammarAccess.getRDCAccess().getConnectorsAssignment_7(), "rule__RDC__ConnectorsAssignment_7");
					put(grammarAccess.getRDCAccess().getMetricParametersAssignment_8_2(), "rule__RDC__MetricParametersAssignment_8_2");
					put(grammarAccess.getConnectorAccess().getNameAssignment_1(), "rule__Connector__NameAssignment_1");
					put(grammarAccess.getConnectorAccess().getAvailableEqInterfacesAssignment_3(), "rule__Connector__AvailableEqInterfacesAssignment_3");
					put(grammarAccess.getAvailableEqInterfaceAccess().getCountAssignment_0(), "rule__AvailableEqInterface__CountAssignment_0");
					put(grammarAccess.getAvailableEqInterfaceAccess().getEqInterfaceTypeAssignment_2(), "rule__AvailableEqInterface__EqInterfaceTypeAssignment_2");
					put(grammarAccess.getEqInterfaceGroupAccess().getNameAssignment_1(), "rule__EqInterfaceGroup__NameAssignment_1");
					put(grammarAccess.getEqInterfaceGroupAccess().getEqInterfacesAssignment_3(), "rule__EqInterfaceGroup__EqInterfacesAssignment_3");
					put(grammarAccess.getEqInterfaceGroupAccess().getEqInterfacesAssignment_4_1(), "rule__EqInterfaceGroup__EqInterfacesAssignment_4_1");
					put(grammarAccess.getEqInterfaceAccess().getNameAssignment_1(), "rule__EqInterface__NameAssignment_1");
					put(grammarAccess.getEqInterfaceAccess().getSystemAssignment_3_2(), "rule__EqInterface__SystemAssignment_3_2");
					put(grammarAccess.getEqInterfaceAccess().getSubAtaAssignment_4_2(), "rule__EqInterface__SubAtaAssignment_4_2");
					put(grammarAccess.getEqInterfaceAccess().getResourceAssignment_5_2(), "rule__EqInterface__ResourceAssignment_5_2");
					put(grammarAccess.getEqInterfaceAccess().getLineNameAssignment_6_2(), "rule__EqInterface__LineNameAssignment_6_2");
					put(grammarAccess.getEqInterfaceAccess().getWiringLaneAssignment_7_2(), "rule__EqInterface__WiringLaneAssignment_7_2");
					put(grammarAccess.getEqInterfaceAccess().getGrpInfoAssignment_8_2(), "rule__EqInterface__GrpInfoAssignment_8_2");
					put(grammarAccess.getEqInterfaceAccess().getRouteAssignment_9_2(), "rule__EqInterface__RouteAssignment_9_2");
					put(grammarAccess.getEqInterfaceAccess().getPwSup1Assignment_10_2(), "rule__EqInterface__PwSup1Assignment_10_2");
					put(grammarAccess.getEqInterfaceAccess().getEmhZone1Assignment_11_2(), "rule__EqInterface__EmhZone1Assignment_11_2");
					put(grammarAccess.getEqInterfaceAccess().getIoTypeAssignment_12_2(), "rule__EqInterface__IoTypeAssignment_12_2");
					put(grammarAccess.getEqInterfaceAccess().getMetricParametersAssignment_13_2(), "rule__EqInterface__MetricParametersAssignment_13_2");
					put(grammarAccess.getMetricParameterAccess().getNameAssignment_0(), "rule__MetricParameter__NameAssignment_0");
					put(grammarAccess.getMetricParameterAccess().getValueAssignment_2(), "rule__MetricParameter__ValueAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			ch.hilbri.assist.mappingdsl.ui.contentassist.antlr.internal.InternalMappingDSLParser typedParser = (ch.hilbri.assist.mappingdsl.ui.contentassist.antlr.internal.InternalMappingDSLParser) parser;
			typedParser.entryRuleAssistModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MappingDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MappingDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
