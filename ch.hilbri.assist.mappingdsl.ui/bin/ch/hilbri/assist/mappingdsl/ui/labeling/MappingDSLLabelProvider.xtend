/*
* generated by Xtext
*/
package ch.hilbri.assist.mappingdsl.ui.labeling

import ch.hilbri.assist.datamodel.model.Application
import ch.hilbri.assist.datamodel.model.ApplicationGroup
import ch.hilbri.assist.datamodel.model.AssistModel
import ch.hilbri.assist.datamodel.model.Board
import ch.hilbri.assist.datamodel.model.Box
import ch.hilbri.assist.datamodel.model.CommunicationRelation
import ch.hilbri.assist.datamodel.model.Compartment
import ch.hilbri.assist.datamodel.model.Core
import ch.hilbri.assist.datamodel.model.DislocalityRelation
import ch.hilbri.assist.datamodel.model.DissimilarityRelation
import ch.hilbri.assist.datamodel.model.Processor
import ch.hilbri.assist.datamodel.model.ProximityRelation
import ch.hilbri.assist.datamodel.model.Network

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
class MappingDSLLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	def text(AssistModel model) {
		'System ' + model.systemName
	}

	def image(AssistModel model) {
		'outline_view_system_16x16.png'
	}

	def text(Compartment comp) {
		'Compartment ' + comp.name
	}

	def image(Compartment comp) {
		'outline_view_compartment_16x16.png'
	}

	def text(Box box) {
		'Box ' + box.name
	}

	def image(Box box) {
		'outline_view_box_16x16.png'
	}

	def text(Board b) {
		'Board ' + b.name
	}

	def image(Board b) {
		'outline_view_board_16x16.png'
	}

	def text(Processor p) {
		'Processor ' + p.name
	}

	def image(Processor p) {
		'outline_view_processor_16x16.png'
	}

	def text(Core c) {
		'Core ' + c.name
	}

	def image(Core c) {
		'outline_view_core_16x16.png'
	}

	def text(Application a) {
		'Application ' + a.name
	}

	def image(Application a) {
		'outline_view_application2_16x16.png'
	}

	def text(DislocalityRelation r) {
		r.applicationsOrGroups + " dislocal up to " + r.hardwareLevel
	}

	def image(DislocalityRelation r) {
		'outline_view_relation_16x16.png'
	}

	def text(DissimilarityRelation r) {
		r.applicationsOrGroups + " dissimilar"
	}

	def image(DissimilarityRelation r) {
		'outline_view_relation_16x16.png'
	}

	def text(ProximityRelation r) {
		r.applicationsOrGroups + " on same " + r.hardwareLevel
	}

	def image(ProximityRelation r) {
		'outline_view_relation_16x16.png'
	}

	def text(CommunicationRelation r) {
		r.applicationsOrGroups + " with bandwidth " + r.bandwidthUtilization
	}

	def image(CommunicationRelation r) {
		'outline_view_communication_16x16.png'
	}
	
	def text(Network n) {
		n.name + " connects " + n.boards 
	}
	
	def image(Network n) {
		'outline_view_network_16x16.png'
	}
	
	def text(ApplicationGroup g) {
		g.name + " contains " + g.applicationsOrGroups
	}
	
	def image(ApplicationGroup g) {
		'outline_view_application_group_16x16.png'
	}
}
