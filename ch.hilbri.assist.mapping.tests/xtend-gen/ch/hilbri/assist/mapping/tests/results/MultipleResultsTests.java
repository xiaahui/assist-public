package ch.hilbri.assist.mapping.tests.results;

import ch.hilbri.assist.mapping.tests.AbstractMappingTest;
import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class MultipleResultsTests extends AbstractMappingTest {
  public MultipleResultsTests() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("Global {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("System name = \"Simple System\";");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("Hardware {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Compartment C1 {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Manufacturer = \"CompartmentManufacturer1\";");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("PowerSupply  = \"CompartmentPowerSupply1\";");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Side\t\t = \"CompartmentSide1\";");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Zone\t\t = \"CompartmentZone1\";");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Box Box1 {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Manufacturer = \"BoxManufacturer1\";");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Board Board1 {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Manufacturer = \"Board Vendor 1\";");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Type\t\t = \"BoardType1\";");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("PowerSupply  = \"BoardPowerSupply1\";");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("DesignAssuranceLevel = C;");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("RAM capacity = 123451;");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("ROM capacity = 678901;");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Processor Processor1 {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Manufacturer = \"Freescale1\";");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Type = \"MPC55541\";");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Core Core1 {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("Capacity = 101;   ");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("Architecture = \"e200z61\";");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Compartment C2 {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Manufacturer = \"CompartmentManufacturer2\";");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("PowerSupply = \"CompartmentPowerSupply2\";");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Side\t\t = \"CompartmentSide2\";");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Zone\t\t = \"CompartmentZone2\";");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Box Box2 {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Manufacturer = \"BoxManufacturer2\";");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Board Board2 {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Manufacturer = \"Board Vendor 2\";");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Type\t\t = \"BoardType2\";");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("PowerSupply = \"BoardPowerSupply2\";");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("DesignAssuranceLevel = D;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("RAM capacity = 123452;");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("ROM capacity = 678902;");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Processor Processor2 {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Manufacturer = \"Freescale2\";");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Type = \"MPC55542\";");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Core Core2 {");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("Capacity = 102;   ");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("Architecture = \"e200z62\";");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("Software {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Application A1   {\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Core-utilization \t\t\t= 11;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Required RAM capacity \t\t= 12341; ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Required ROM capacity \t\t= 34561; ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("Criticality level \t\t\t= D;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("Required IO protection \t\t= L2;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Identical parallel threads \t= 1;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Developed by \t\t\t\t= \"Company A1\";");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append(" ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Application A2   {\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Core-utilization \t\t\t= 12;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Required RAM capacity \t\t= 12342; ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Required ROM capacity \t\t= 34562; ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("Criticality level \t\t\t= D;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("Required IO protection \t\t= L3;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Identical parallel threads \t= 1;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Developed by \t\t\t\t= \"Company A2\";");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    this.input = _builder.toString();
  }
}
